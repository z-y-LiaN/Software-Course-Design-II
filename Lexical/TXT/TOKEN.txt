#         LIMITER
include         KEYWORDS
<         OPERATOR
iostream         KEYWORDS
>         OPERATOR
int         KEYWORDS
main         KEYWORDS
(         LIMITER
)         LIMITER
{         LIMITER
double         KEYWORDS
zyl         ID
=         OPERATOR
9191.0684         CONST
+         OPERATOR
212         CONST
;         LIMITER
int         KEYWORDS
a         ID
=         OPERATOR
0         CONST
;         LIMITER
for         KEYWORDS
(         LIMITER
int         KEYWORDS
i         ID
=         OPERATOR
1         CONST
;         LIMITER
i         ID
<         OPERATOR
99         CONST
;         LIMITER
i         ID
++         OPERATOR
)         LIMITER
{         LIMITER
if         KEYWORDS
(         LIMITER
i         ID
>         OPERATOR
23         CONST
(         LIMITER
)         LIMITER
{         LIMITER
int         KEYWORDS
why         ID
=         OPERATOR
2i+3         CONST
;         LIMITER
}         LIMITER
else         KEYWORDS
{         LIMITER
i         ID
=         OPERATOR
i         ID
+         OPERATOR
0.2e+2         CONST
;         LIMITER
a         ID
+=         OPERATOR
1         CONST
;         LIMITER
}         LIMITER
switch         KEYWORDS
(         LIMITER
a         ID
)         LIMITER
{         LIMITER
case         KEYWORDS
2.3         CONST
:         LIMITER
int         KEYWORDS
njust         ID
=         OPERATOR
5         CONST
*         OPERATOR
2         CONST
;         LIMITER
case         KEYWORDS
3i+4         CONST
:         LIMITER
a         ID
=         OPERATOR
a         ID
/         OPERATOR
1         CONST
;         LIMITER
default         KEYWORDS
:         LIMITER
why         ID
=         OPERATOR
5         CONST
-         OPERATOR
a         ID
;         LIMITER
}         LIMITER
do         KEYWORDS
{         LIMITER
b         ID
--         OPERATOR
;         LIMITER
}         LIMITER
while         KEYWORDS
(         LIMITER
b         ID
==         OPERATOR
3         CONST
)         LIMITER
;         LIMITER
}         LIMITER
}         LIMITER
